KnotAli Implementation and Design Notes.

Joseph Zieg Mar/April 2019

[NOTES]

    It seems that compiling input for a consensus sequence AND a consensus structure will take most
    of the ViennaRNA's implementation for RNAalifold. This may pose some issues in terms of exactly
    how the pseudoknot-free structure is generated.

    Additionally, their implementation is likely tailored to RNAalifold params, may want different constraints for
    KnotAli.

    Update 04/18: After trying to port the ViennaRNA codebase, it appears that most of the time was taken up with
    attempting to determine what needed to be ported and trying to adjust for a smaller scope of design. Path moving
    forward will be to work on independent methods of implementation according to functionality.

    Check the consensus method for creating a structure. May want to draw from class lecture for implementation ideas
    instead. Test with dataset Hosna provided.

    Update 05/03/2019: structure output convert to bp sec, compare consensus structure to known structure for
    similarities/diffs

    Project Steps:  Use a CLUSTAL MSA input to compute a consensus structure.
                    Use simfold and the conserved cols of the MSA to create a conservation structure for input.
                    Run KnotAli, HFold iterative, RNAalifold on the CLUSTAL MSA sequence families.
                    Use bp_seq conversion of output to compare each software's structure against known single seq struc
                    in dataset.

    TODO:       03/06/2019 Design consensus sequence functionality.
    COMPLETED:  04/20/2019 Implemented basic most frequent base consensus.

    TODO:       04/01/2019 Design restriction structure functionality, use covariation, mutual information tests.

    TODO:       04/06/2019 Email Hosna about David Matthews for psuedoknot sequence family datasets
    COMPLETED:  04/08/2019

    TODO:       04/06/2019 Compare to ViennaRNA generated consensus sequences.
    TEST:       04/08/2019 Compare the .ct files (need converting to dot bracket) with output from RNAalifold to note
                           differences in structures.
    ADJUSTMENT: 04/18/2019 If the current decision is to implement functionality by self-design, above no longer needed.

[FILE READING]
    TODO:       04/18/2019 Implement FASTA file read for MSA.
    COMPLETED:  04/18/2019 Implemented and tested FASTA MSA file read into string vector.

    TODO:       04/18/2019 Implement CLUSTAL file read for MSA. Store conserved base information?

[CONSENSUS SEQUENCE]
    Future work may lie in finding a different metric with which to find a consensus. May want to research how to better
    estimate what bases are the best choice for a consensus. For instance, a consensus sequence deciding on a
    combination of bases that wouldn't pair according to the model but do pair in reality.

    TODO:       04/10/2019 Work on porting over the consensus sequence methods, trim and modify.
    COMPLETED:  04/20/2019 Implemented basic most frequent base consensus.

    Similar ViennaRNA functions:

    char *
    vrna_aln_consensus_sequence(const char      **alignment,
                                const vrna_md_t *md_p);

[CONSENSUS STRUCTURE]
    Will likely want a more lightweight computation for entropy associations between sequences to compute a consensus
    sequence. The vrna_mfe method seems to take into account the full MFE calculation and folding, whereas we'd just
    like to have the computation of an appropriate restriction structure.

    Note:       05/03/2019 The current implementation of file parsing for CLUSTAL combines the sequence MSA and the
                           conserved bases of the alignment into the same array, with the conserved structure being the
                           last value in the array. Further improvements should adjust this.

    TODO:       04/10/2019 Work on porting over the consensus structure methods, trim and modify.
    ADJUSTMENT: 04/24/2019 Design greedy algorithm for restriction structure creation using simfold instead.

    These appear to be post-folding MFE calculation verifications that the structure is valid, not a pre-folding
    restriction information structure.
    Similar ViennaRNA functions:

    float *
    vrna_aln_conservation_struct(const char       **alignment,
                                 const char       *structure,
                                 const vrna_md_t  *md);
    float *
    vrna_aln_conservation_col(const char      **alignment,
                               const vrna_md_t *md_p,
                               unsigned int    options);