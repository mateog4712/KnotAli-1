Import Methods and Potential Classes for MSA input alignments

Joseph Zieg April 2019

[NOTES]

    It seems that compiling input for a consensus sequence AND a consensus structure will take most
    of the ViennaRNA's implementation for RNAalifold. This may pose some issues in terms of exactly
    how the pseudoknot-free structure is generated.

    Check the consensus method for creating a structure. May want to draw from class lecture for implementation ideas
    instead. Test with dataset Hosna provided.
    TEST: compare the .ct files (need converting to dot bracket) with output from RNAalifold to note differences in
    structures

    Email Hosna about David Matthews for psuedoknot sequence family datasets, compare to ViennaRNA
    generated consensus sequences. -DONE 04/08/2019

    TODO: 04/10/2019 Work on porting over the consensus sequence and structure methods, trim and modify.

    TODO: 04/18/2019 FASTA format is likely the easier route to fill first, CLUSTAL is going to be challenging for file read.

[FILE READING] **MAY BE ABLE TO TAKE FROM bin/RNAalifold.c INSTEAD**

    Requires:

    #include <stdio.h>
    #include <stdlib.h>
    #include <string.h>
    #include <math.h>
    #include <ctype.h>

    #include "ViennaRNA/fold_vars.h"
    #include "ViennaRNA/utils/basic.h"
    #include "ViennaRNA/utils/alignments.h"
    #include "ViennaRNA/io/utils.h"
    #include "ViennaRNA/io/file_formats.h"
    #include "ViennaRNA/io/file_formats_msa.h"

    likely don't need **id REMOVED

    int
    vrna_file_msa_read(const char   *filename,
                       char         ***names,
                       char         ***aln,
                       char         **id,
                       char         **structure,
                       unsigned int options);



    May actually want this for the options in vrna_file_msa_read

    unsigned int
    vrna_file_msa_detect_format(const char    *filename,
                                unsigned int  options);

    PUBLIC int
    vrna_file_msa_read_record(FILE          *fp,
                              char          ***names,
                              char          ***aln,
                              char          **id,
                              char          **structure,
                              unsigned int  options)

[CONSENSUS SEQUENCE]

    likely needed for consensus sequencing


    char *
    vrna_aln_consensus_sequence(const char      **alignment,
                                const vrna_md_t *md_p);
        Requires or needs modifying:
            vrna_md_t
            vrna_message_warning
            vrna_md_copy
            vrna_md_set_default
            vrna_alloc
            vrna_nucleotide_encode
            vrna_nucleotide_decode

[CONSENSUS STRUCTURE]

    Will likely want a more lightweight computation for entropy associations between sequences to compute a consensus
    sequence. The vrna_mfe method seems to take into account the full MFE calculation and folding, whereas we'd just
    like to have the computation of an appropriate restriction structure.


    Likely needed for restriction structure USE THESE

    float *
    vrna_aln_conservation_struct(const char       **alignment,
                                 const char       *structure,
                                 const vrna_md_t  *md);
    float *
    vrna_aln_conservation_col(const char      **alignment,
                               const vrna_md_t *md_p,
                               unsigned int    options);